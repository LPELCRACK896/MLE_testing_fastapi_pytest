name: ci-cd-app.yml

on:
    push:
        branches:
            - main

jobs:
  build:
    strategy:
      matrix:
        region: [us-east-1, us-east-2]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ matrix.region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sento-${{ matrix.region }}-processor-ecr
        IMAGE_TAG: latest
        IMAGE_SHA: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA

    - name: Updating instance statics
      run: |
        aws ssm send-command --document-name "sento-${{ matrix.region }}-pull-image-document" --document-version "\$LATEST" --targets '[{"Key":"tag:Environment","Values":["QA"]},{"Key":"tag:OS","Values":["Ubuntu"]}]' --parameters '{"image":["AI"],"region":["${{ matrix.region }}"]}' --timeout-seconds 600 --max-concurrency "50" --max-errors "0"  --region ${{ matrix.region }}
        aws ssm send-command --document-name "sento-${{ matrix.region }}-pull-image-document" --document-version "\$LATEST" --targets '[{"Key":"tag:Environment","Values":["QA"]},{"Key":"tag:OS","Values":["Linux"]}]' --parameters '{"image":["AI"],"region":["${{ matrix.region }}"],"os":["Linux"]}' --timeout-seconds 600 --max-concurrency "50" --max-errors "0"  --region ${{ matrix.region }}
